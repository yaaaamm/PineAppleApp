{"version":3,"sources":["components/layout/Header.js","action/person/persons.js","components/pages/persons/redux_person_list/PersonsList.js","action/person/types.js","action/person/person_detail.js","components/pages/persons/persons_service/PersonsService.js","components/pages/persons/redux_person_view/PersonDetailConstTableTitles.js","components/pages/persons/redux_person_view/PersonDetailViewTableHeaders.js","components/pages/persons/redux_person_view/PersonDetailViewTableBody.js","action/person/person_detail_edit.js","components/pages/persons/redux_person_view/PersonDetailActionButtons.js","components/pages/persons/redux_person_view/PersonDetailModal.js","components/pages/persons/redux_person_view/PersonDetailSingleBlock.js","components/pages/persons/redux_person_view/PersonMainData.js","components/pages/persons/redux_person_view/PersonDetailTabs.js","components/pages/persons/redux_person_view/PersonDetailBusinessIPTableBody.js","components/pages/persons/redux_person_view/PersonDetailBusinessIP.js","components/pages/persons/redux_person_view/PersonDetailBusinessIPModal.js","components/pages/persons/redux_person_view/PersonDetailBusinessCompanyTableBody.js","components/pages/persons/redux_person_view/PersonDetailBusinessCompanyCEO.js","components/pages/persons/redux_person_view/PersonDetailBusinessCompanyTableBodyFounder.js","components/pages/persons/redux_person_view/PersonDetailBusinessCompanyFounder.js","components/pages/persons/redux_person_view/PersonBase.js","components/layout/footer.js","components/pages/persons/redux_person_add/PersonAddUpdeteForm.js","redusers/persons.js","redusers/person_details.js","redusers/person_detail_edit.js","redusers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","API_URL","PersonsList","this","props","getPersons","console","log","persons","scope","map","person","key","id","href","first_name","last_name","middle_name","moment","createdAt","format","Component","connect","state","dispatch","url","axios","get","then","response","type","payload","data","catch","err","getPersonDetails","personDeleteDetail","keyName","source","delete","e","personSaveAddDetail","personDetail","business_id","person_detail","post","responce","personUpdateDetail","close_type","put","PersonsService","previousLastName","PreviousLastName","main_titles","person_previous_last_names","person_passport","person_addresses","person_education","person_social_net","person_family_ties","person_fellow_traveler","person_social_relations_vk","person_social_relations_fb","person_social_relations_inst","person_social_relations_cm","person_social_relations_group_vk","person_social_relations_group_fb","person_social_relations_group_inst","person_social_relations_group_cm","person_ip","person_work","person_companies_CEO","person_companies_founder","tab_titles","passport_date_issued","passport_issued","passport_code","passport_series","passport_number","passport_birthday_country","passport_birthday_city","passport_address","country","region","district","city","street","building","construction_number","flat","building_type","building_name","building_city","building_number","name_social_net","link_social_net","family_tie_relation","family_tie_first_name","family_tie_last_name","family_tie_middle_name","family_tie_date_birthday","family_tie_link_social_net","family_tie_job","family_tie_working_position","fellow_traveler_first_name","fellow_traveler_last_name","fellow_traveler_middle_name","fellow_traveler_date_birthday","fellow_traveler_city_from","fellow_traveler_city_to","fellow_traveler_date_trip","social_relations_vk_link_account","social_relations_vk_first_name","social_relations_vk_last_name","social_relations_vk_middle_name","social_relations_fb_link_account","social_relations_fb_first_name","social_relations_fb_last_name","social_relations_fb_middle_name","social_relations_inst_link_account","social_relations_inst_first_name","social_relations_inst_last_name","social_relations_inst_middle_name","social_relations_cm_link_account","social_relations_cm_first_name","social_relations_cm_last_name","social_relations_cm_middle_name","social_relations_vk_link_group","social_relations_vk_name_group","social_relations_fb_link_group","social_relations_fb_name_group","social_relations_inst_link_group","social_relations_inst_name_group","social_relations_cm_link_group","social_relations_cm_name_group","ip_name","ip_inn","ip_date_period_from","ip_date_period_to","company_name","company_inn","work_position","work_date_period_from","work_date_period_to","companies_ceo_date_period_from","companies_ceo_date_period_to","company_share","person_ip_business_detail","ip_detail_okved","person_companies_CEO_business_detail","inn","person_companies_founder_business_detail","getPersonDetailTableTitle","title","PersonDetailViewTableHeaders","Fragment","Object","entries","value","PersonDetailViewTableBody","personOpenEditDetail","personOpenAddDetail","newObj","fromEntries","personCloseEditDetail","PersonDetailActionButtons","getStyleOnEdit","editMode","marginRight","display","rowSpan","style","is_edit_mode","onClick","person_details","personDeleteBusinessDetail","PersonDetailModal","person_show_modal","onChange","setState","target","name","onUpdate","title_for","handleClick","values","filter","length","Modal","show","onHide","size","closeButton","Title","Body","indexOf","htmlFor","Footer","person_detail_edit","PersonDetailSingleBlock","item","index","PersonMainData","date_birthday","person_characteristic","person_comment","person_negative","calendar","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","component","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","classes","React","useState","setValue","AppBar","position","Tabs","event","newValue","aria-label","variant","Tab","label","a11yProps","dataValue","PersonDetailBusinessIPTableBody","row_span","additionOkved","business_detail","PersonDetailBusinessIP","PersonDetailBusinessModal","person_show_modal_business","personCloseEditBusinessDetail","prevProps","prevState","businessKey","PersonDetailBusinessCompanyTableBody","firstTD","additionTD","PersonDetailBusinessCompanyCEO","class","colSpan","PersonDetailBusinessCompanyTableBodyFounder","PersonDetailBusinessCompanyFounder","personsService","PersonBase","showModal","showModalBusiness","params","match","self","PersonDeletePreviousLastName","newArr","obj","createPersonPreviousLastName","person_id","res","alert","person_previous_last_name","updatePersonPreviousLastName","PersonAddUpdate","errors","open","preventDefault","isValid","keys","addPerson","updatePerson","deleteConfirm","handleConfirmedDelete","deletePerson","handleCancel","action","classnames","rows","push","initialState","new_person_details","person_social_relations","person_social_relations_group","nextValues","assign","ip","nextKey","isNew","isEdit","createRootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","middleware","thunk","preloadedState","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","App","path","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.208ccbbb.chunk.js","sourcesContent":["import React from 'react';\r\nimport  { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n            <header>\r\n                <div className=\"container mt-10\">\r\n                <ul className=\"nav nav-pills nav-fill\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">Главная</Link>\r\n                    </li>\r\n                     <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/person_add\">Добавить контакт</Link>\r\n                     </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/person_list\">Список контактов</Link>\r\n                    </li>\r\n                    </ul>\r\n                    </div>\r\n            </header>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import axios from 'axios';\r\nimport { GET_PERSONS, ADD_PERSON} from './types';\r\nimport { push } from 'connected-react-router'\r\n\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n\r\n// Get Persons\r\nexport const getPersons = () => dispatch => {\r\n        const url = `${API_URL}/person_list/`;\r\n        return axios.get(url).then(response =>\r\n        {\r\n            dispatch({\r\n                type: GET_PERSONS,\r\n                payload: response.data\r\n            });\r\n        }).catch(err=>console.log(err))\r\n    };\r\n\r\nexport const addPerson = (data) => dispatch => {\r\n        const url = `${API_URL}/person_add/`;\r\n        return axios.post(url, {\r\n                data: data\r\n            }).then(response =>\r\n        {\r\n            dispatch({\r\n                type: ADD_PERSON,\r\n                payload: response.data\r\n            });\r\n            dispatch(push(`/person/${response.data.id}`))\r\n        }).catch(err=>console.log(err))\r\n    };\r\n\r\nexport const updatePerson = (data) => dispatch => {\r\n        const url = `${API_URL}/person/${data.id}`;\r\n        return axios.put(url,data).then(response =>\r\n        dispatch(push(`/person/${response.data.id}`))\r\n        ).catch(err=>console.log(err))\r\n    };\r\n\r\n\r\nexport const deletePerson = (id) => dispatch => {\r\n        const url = `${API_URL}/person/${id}`;\r\n        return axios.delete(url).then(response =>\r\n        dispatch(push(`/person_list`))\r\n        ).catch(err=>console.log(err))\r\n    };\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getPersons } from '../../../../action/person/persons';\r\nimport moment from \"moment\";\r\n\r\n\r\nexport class PersonsList extends Component {\r\n    static propTypes = {\r\n        persons: PropTypes.array.isRequired,\r\n        getPersons: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getPersons();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.persons)\r\n        return (\r\n            <div className=\"form-group\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr >\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">ФИО</th>\r\n                        <th scope=\"col\">Дата добавления</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.props.persons.map((person) => (\r\n                        <tr key={person.id}>\r\n                                <td> { person.id } </td>\r\n                                <td><a href ={\"person/\" + person.id}> { person.first_name } { person.last_name } { person.middle_name }</a></td>\r\n                                <td> { moment(person.createdAt).format('Do MMMM YYYY, h:mm:ss a') }</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        )) }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    persons: state.persons.persons,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getPersons })(PersonsList);","export const ADD_PERSON = 'ADD_PERSON';\r\nexport const DELETE_PERSON = 'DELETE_PERSON';\r\nexport const GET_PERSONS = 'GET_PERSONS';\r\nexport const GET_PERSON_DETAILS = 'GET_PERSON_DETAILS';\r\nexport const DELETE_PERSON_DETAIL = 'DELETE_PERSON_DETAIL';\r\nexport const TOGGLE_PERSON_DETAIL= 'TOGGLE_PERSON_DETAIL';\r\nexport const OPEN_EDIT_PERSON_DETAIL = 'OPEN_EDIT_PERSON_DETAIL';\r\nexport const OPEN_EDIT_PERSON_BUSINESS_DETAIL = 'OPEN_EDIT_PERSON_BUSINESS_DETAIL';\r\nexport const OPEN_ADD_PERSON_DETAIL = 'OPEN_ADD_PERSON_DETAIL';\r\nexport const SAVE_ADD_PERSON_DETAIL = 'SAVE_ADD_PERSON_DETAIL';\r\nexport const CLOSE_EDIT_PERSON_DETAIL = 'CLOSE_EDIT_PERSON_DETAIL';\r\nexport const CLOSE_EDIT_PERSON_BUSINESS_DETAIL = 'CLOSE_EDIT_PERSON_BUSINESS_DETAIL';\r\nexport const UPDATE_PERSON_DETAIL = 'UPDATE_PERSON_DETAIL';\r\nexport const OPEN_ADD_PERSON_BUSINESS_DETAIL = 'OPEN_ADD_PERSON_BUSINESS_DETAIL';\r\nexport const UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL ='UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL';\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    GET_PERSON_DETAILS,\r\n    DELETE_PERSON_DETAIL,\r\n    TOGGLE_PERSON_DETAIL,\r\n    UPDATE_PERSON_DETAIL,\r\n    CLOSE_EDIT_PERSON_DETAIL,\r\n    SAVE_ADD_PERSON_DETAIL,\r\n    CLOSE_EDIT_PERSON_BUSINESS_DETAIL,\r\n    OPEN_EDIT_PERSON_BUSINESS_DETAIL,\r\n    OPEN_EDIT_PERSON_DETAIL, UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL\r\n} from './types';\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n\r\n//\r\n/*\r\nexport const getPersonDetails = (id) => dispatch => {\r\n        const url = `${API_URL}/person_detail/${id}`;\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                console.log(response)\r\n                dispatch({\r\n                        type: GET_PERSON_DETAILS,\r\n                        payload: response\r\n            });\r\n            })\r\n            .then((error) => {\r\n                console.log(error)\r\n            })\r\n    };\r\n*/\r\nexport const getPersonDetails = (id) => dispatch => {\r\n        const url = `${API_URL}/person_detail/${id}`;\r\n        return axios.get(url).then(response =>\r\n        {\r\n            dispatch({\r\n                type: GET_PERSON_DETAILS,\r\n                payload: response.data\r\n            });\r\n        }).catch(err=>console.log(err))\r\n    };\r\n\r\nexport const personDeleteDetail = (id, keyName) => dispatch => {\r\n    try {\r\n        const url=`${ API_URL }/person_detail_delete/`;\r\n        const data={ id: id, source: keyName }\r\n        return axios.delete(url, {\r\n            data: data\r\n            }).then(response =>\r\n        {\r\n            dispatch({\r\n                type: DELETE_PERSON_DETAIL,\r\n                payload: data\r\n            });\r\n            dispatch({\r\n                type: UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL,\r\n                payload: data\r\n            });\r\n        }).catch(err=>console.log(err))\r\n    } catch (e) {\r\n        console.log(e)\r\n\r\n    }\r\n};\r\n\r\nexport const personDeleteBusinessDetail = (id, keyName) => {\r\n    try {\r\n      /*  console.log(keyName)\r\n    const url=`${ API_URL }/person_detail_delete/`;\r\n    const data = {id: id, source: keyName}\r\n    console.log(data)\r\n    return axios.delete(url, {\r\n            data: data\r\n            }).then(response =>\r\n        {\r\n            dispatch({\r\n                type: DELETE_PERSON_DETAIL,\r\n                payload: data\r\n            });\r\n            console.log(response)\r\n        }).catch(err=>console.log(err))*/\r\n    } catch (e) {\r\n            alert(e)\r\n\r\n    }\r\n    };\r\n\r\n/*export const personDeleteDetail = (id, keyName) => dispatch => {\r\n    const url=`${ API_URL }/person_data_delete/`;\r\n    const data = {id: id, source: keyName};\r\n    return  (\r\n            dispatch({\r\n                type: DELETE_PERSON_DETAIL,\r\n                payload: data\r\n            })\r\n    );\r\n    };*/\r\nexport const personSaveAddDetail = (personDetail, keyName, id, business_id=null) => dispatch => {\r\n    const data={person_detail: personDetail, source: keyName, business_id: business_id};\r\n    const url = `${API_URL}/person_detail_create/${id}`;\r\n    return axios.post(url, {\r\n        data: data\r\n    }).then(responce => {\r\n        dispatch({\r\n            type: SAVE_ADD_PERSON_DETAIL,\r\n            payload: {\r\n                person_detail: responce.data,\r\n                source: keyName\r\n            }\r\n        });\r\n        dispatch({\r\n        type: CLOSE_EDIT_PERSON_DETAIL,\r\n            payload: responce.data\r\n            })\r\n    }).catch(err => console.log(err))\r\n};\r\n\r\n\r\n\r\nexport const personUpdateDetail = (personDetail, keyName) => dispatch => {\r\n    let close_type;\r\n    if (keyName === \"person_ip\" || keyName ===\"person_companies_CEO\" || keyName ===\"person_companies_founder\") {\r\n        close_type = CLOSE_EDIT_PERSON_BUSINESS_DETAIL\r\n    }else{\r\n        close_type = CLOSE_EDIT_PERSON_DETAIL\r\n    }\r\n    const data={person_detail: personDetail, source: keyName};\r\n    const url=`${ API_URL }/person_detail_update/`;\r\n    return axios.put(url, {\r\n        data: data\r\n    }).then(responce => {\r\n        dispatch({\r\n            type: UPDATE_PERSON_DETAIL,\r\n            payload: data\r\n        });\r\n    }).then(dispatch({\r\n        type: close_type,\r\n        payload: data\r\n            })\r\n    ).catch(err => console.log(err))\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const personToggleDetail = (id, keyName) => dispatch => {\r\n    const data = {id: id, source: keyName}\r\n    return  (\r\n            dispatch({\r\n                type: TOGGLE_PERSON_DETAIL,\r\n                payload: data\r\n            })\r\n    );\r\n};\r\n","import axios from 'axios';\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nexport default class PersonsService{\r\n\r\n    getPersons() {\r\n        const url = `${API_URL}/person_list/`;\r\n        return axios.get(url).then(response => response.data);\r\n    }\r\n\r\n    getPerson(id) {\r\n        const url = `${API_URL}/person/${id}`;\r\n        return axios.get(url).then(response => response.data);\r\n    }\r\n    PersonDeletePreviousLastName(data) {\r\n        const url=`${ API_URL }/person_data_delete/`;\r\n        return axios.delete(url, {\r\n            data: {\r\n                id: data.id, source: data.source\r\n            }\r\n        });\r\n    }\r\n    createPersonPreviousLastName(previousLastName){\r\n        const url = `${API_URL}/person_data_create/`;\r\n        return axios.post(url,previousLastName);\r\n    }\r\n    updatePersonPreviousLastName(PreviousLastName){\r\n       console.log(PreviousLastName)\r\n        const url = `${API_URL}/person_data_update/`;\r\n        return axios.put(url,PreviousLastName);\r\n    }\r\n}\r\n\r\n","export const main_titles ={\r\n    person_previous_last_names: 'Предыдущая фамилия',\r\n    person_passport: 'Паспорт',\r\n    person_addresses: 'Адрес',\r\n    person_education: 'Образование',\r\n    person_social_net: 'Соц. сети',\r\n    person_family_ties: 'Семейные связи',\r\n    person_fellow_traveler: 'Попутчики',\r\n    person_social_relations_vk: 'Друзья соц сеть ВК',\r\n    person_social_relations_fb: 'Друзья соц сеть ФБ',\r\n    person_social_relations_inst: 'Друзья соц сеть Инст',\r\n    person_social_relations_cm: 'Друзья соц сеть Однокласники',\r\n    person_social_relations_group_vk: 'Группы ВК в которых состоит человек',\r\n    person_social_relations_group_fb: 'Группы ФБ в которых состоит человек',\r\n    person_social_relations_group_inst: 'Группы Инст в которых состоит человек',\r\n    person_social_relations_group_cm: 'Группы Одноклассники в которых состоит человек',\r\n    person_ip: 'Данные об ИП',\r\n    person_work: 'Данные о работе',\r\n    person_companies_CEO: 'Генеральный директор',\r\n    person_companies_founder: 'Учредитель'\r\n};\r\n\r\nexport const tab_titles ={\r\n    person_social_relations_vk: 'Друзья в VK',\r\n    person_social_relations_fb: 'Друзья в FB',\r\n    person_social_relations_inst: 'Друзья в Instagram',\r\n    person_social_relations_cm: 'Друзья в Одноклаcсниках',\r\n    person_social_relations_group_vk: 'Группы в VK',\r\n    person_social_relations_group_fb: 'Группы FB',\r\n    person_social_relations_group_inst: 'Группы в Instagram',\r\n    person_social_relations_group_cm: 'Группы в Одноклассниках',\r\n};\r\n\r\nconst person_previous_last_names = {\r\n    last_name: 'Фамилия',\r\n};\r\nconst person_passport ={\r\n    passport_date_issued: 'Дата Выдачи',\r\n    passport_issued: 'Выдан',\r\n    passport_code: 'Код паспорта',\r\n    passport_series: 'Серия паспорта',\r\n    passport_number: 'Номер паспорта',\r\n    passport_birthday_country: 'Место рождения (страна)',\r\n    passport_birthday_city: 'Место рождения (город)',\r\n    passport_address: 'Ардес регистрации',\r\n};\r\n\r\nconst person_addresses ={\r\n    country: 'Страна',\r\n    region: 'Регион',\r\n    district: 'Округ',\r\n    city: 'Город',\r\n    street: 'Улица',\r\n    building: 'Дом',\r\n    construction_number: 'Стр.',\r\n    flat: 'Кв.',\r\n};\r\nconst person_education = {\r\n    building_type: 'Тип заведения',\r\n    building_name: 'Название учереждения',\r\n    building_city: 'Город',\r\n    building_number: 'Номер',\r\n};\r\nconst person_social_net ={\r\n    name_social_net: 'Название соц. сети',\r\n    link_social_net: 'Ссылка на соцсеть',\r\n};\r\nconst person_family_ties ={\r\n    family_tie_relation: 'Родство',\r\n    family_tie_first_name: 'Имя',\r\n    family_tie_last_name: 'Фамилия',\r\n    family_tie_middle_name: 'Отчество',\r\n    family_tie_date_birthday: 'Дата рождения',\r\n    family_tie_link_social_net: 'Ссылка на соцсеть',\r\n    family_tie_job: 'Место работы',\r\n    family_tie_working_position: 'Должность',\r\n};\r\nconst person_fellow_traveler ={\r\n    fellow_traveler_first_name: 'Имя',\r\n    fellow_traveler_last_name: 'Фамилия',\r\n    fellow_traveler_middle_name: 'Отчество',\r\n    fellow_traveler_date_birthday: 'Дата рождения',\r\n    fellow_traveler_city_from: 'Город отправления',\r\n    fellow_traveler_city_to: 'Город прибытия',\r\n    fellow_traveler_date_trip: 'Дата поездки',\r\n};\r\n\r\n\r\nconst person_social_relations_vk ={\r\n    social_relations_vk_link_account: 'Ссылка на аккаунт в соц.сети',\r\n    social_relations_vk_first_name: 'Имя',\r\n    social_relations_vk_last_name: 'Фамилия',\r\n    social_relations_vk_middle_name: 'Отчество',\r\n};\r\n\r\nconst person_social_relations_fb ={\r\n    social_relations_fb_link_account: 'Ссылка на аккаунт в соц.сети',\r\n    social_relations_fb_first_name: 'Имя',\r\n    social_relations_fb_last_name: 'Фамилия',\r\n    social_relations_fb_middle_name: 'Отчество',\r\n};\r\nconst person_social_relations_inst ={\r\n    social_relations_inst_link_account: 'Ссылка на аккаунт в соц.сети',\r\n    social_relations_inst_first_name: 'Имя',\r\n    social_relations_inst_last_name: 'Фамилия',\r\n    social_relations_inst_middle_name: 'Отчество',\r\n};\r\nconst person_social_relations_cm ={\r\n    social_relations_cm_link_account: 'Ссылка на аккаунт в соц.сети',\r\n    social_relations_cm_first_name: 'Имя',\r\n    social_relations_cm_last_name: 'Фамилия',\r\n    social_relations_cm_middle_name: 'Отчество',\r\n};\r\nconst person_social_relations_group_vk ={\r\n    social_relations_vk_link_group: 'Ссылка на группы',\r\n    social_relations_vk_name_group: 'Название группы',\r\n};\r\nconst person_social_relations_group_fb ={\r\n    social_relations_fb_link_group: 'Ссылка на группы',\r\n    social_relations_fb_name_group: 'Название группы',\r\n};\r\nconst person_social_relations_group_inst ={\r\n    social_relations_inst_link_group: 'Ссылка на группы',\r\n    social_relations_inst_name_group: 'Название группы',\r\n};\r\nconst person_social_relations_group_cm ={\r\n    social_relations_cm_link_group: 'Ссылка на группы',\r\n    social_relations_cm_name_group: 'Название группы',\r\n};\r\nconst person_ip ={\r\n    ip_name: 'Название ИП',\r\n    ip_inn: 'ИНН',\r\n    ip_date_period_from: 'Период работы с',\r\n    ip_date_period_to: 'Период работы по',\r\n};\r\n\r\nconst person_work ={\r\n    company_name: 'Название компании',\r\n    company_inn: 'ИНН',\r\n    work_position: 'Должность',\r\n    work_date_period_from: 'Период работы с',\r\n    work_date_period_to: 'Период работы по',\r\n};\r\n\r\nconst person_companies_CEO ={\r\n    company_name: 'Название компании',\r\n    company_inn: 'ИНН',\r\n    companies_ceo_date_period_from: 'Ген. дир с',\r\n    companies_ceo_date_period_to: 'Ген. дир по',\r\n};\r\n\r\nconst person_companies_founder ={\r\n    company_name: 'Название компании',\r\n    company_inn: 'ИНН',\r\n    company_share: 'Доля в компании',\r\n};\r\n\r\nconst person_ip_business_detail = {\r\n    ip_detail_okved: 'Основной ОКВЭД',\r\n};\r\nconst person_companies_CEO_business_detail = {\r\n    first_name: 'Имя',\r\n    last_name: 'Фамилия',\r\n    middle_name: 'Отчество',\r\n    inn: 'ИНН',\r\n};\r\n\r\nconst person_companies_founder_business_detail = {\r\n    first_name: 'Имя',\r\n    last_name: 'Фамилия',\r\n    middle_name: 'Отчество',\r\n    inn: 'ИНН',\r\n    company_share: 'Доля в компании (%)'\r\n};\r\n\r\nexport default function getPersonDetailTableTitle(title) {\r\n    switch(title){\r\n        case \"person_previous_last_names\":\r\n            return person_previous_last_names;\r\n        case \"person_passport\":\r\n            return person_passport;\r\n        case \"person_addresses\":\r\n            return person_addresses;\r\n        case \"person_education\":\r\n            return person_education;\r\n        case \"person_social_net\":\r\n            return person_social_net;\r\n        case \"person_family_ties\":\r\n            return person_family_ties;\r\n        case \"person_fellow_traveler\":\r\n            return person_fellow_traveler;\r\n        case \"person_social_relations_vk\":\r\n            return person_social_relations_vk;\r\n        case \"person_social_relations_fb\":\r\n            return person_social_relations_fb;\r\n        case \"person_social_relations_inst\":\r\n            return person_social_relations_inst;\r\n        case \"person_social_relations_cm\":\r\n            return person_social_relations_cm;\r\n        case \"person_social_relations_group_vk\":\r\n            return person_social_relations_group_vk;\r\n        case \"person_social_relations_group_fb\":\r\n            return person_social_relations_group_fb;\r\n        case \"person_social_relations_group_inst\":\r\n            return person_social_relations_group_inst;\r\n        case \"person_social_relations_group_cm\":\r\n            return person_social_relations_group_cm;\r\n        case \"person_ip\":\r\n            return person_ip;\r\n        case \"person_ip_business_detail\":\r\n            return person_ip_business_detail;\r\n        case \"person_work\":\r\n            return person_work;\r\n        case \"person_companies_CEO\":\r\n            return person_companies_CEO;\r\n        case \"person_companies_founder\":\r\n            return person_companies_founder;\r\n        case \"person_companies_CEO_business_detail\":\r\n            return person_companies_CEO_business_detail;\r\n        case \"person_companies_founder_business_detail\":\r\n            return person_companies_founder_business_detail;\r\n        default:\r\n            return title;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport getPersonDetailTableTitle from './PersonDetailConstTableTitles'\r\n\r\nfunction PersonDetailViewTableHeaders(props) {\r\n    const title = getPersonDetailTableTitle(props.data)\r\n    return (\r\n        <React.Fragment>\r\n            <th key='#'>#</th>\r\n            {Object.entries(title).map(([key, value])=> {\r\n                 return(<th key={ value } scope=\"col\">{ value }</th>)\r\n            })}\r\n        </React.Fragment>);\r\n}\r\n\r\nexport default PersonDetailViewTableHeaders;","import React from \"react\";\r\n\r\nfunction PersonDetailViewTableBody(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.entries(props.data).map(([key, value]) => {\r\n                    if (key !== 'id' && key !== 'person' && key !== 'ip' && key !== 'company') {\r\n                        return (\r\n                            <td key={key}>{ value }</td>)\r\n                    }\r\n                    return null\r\n            })\r\n            }\r\n        </React.Fragment>);\r\n}\r\n\r\nexport default PersonDetailViewTableBody;","import {\r\n    OPEN_EDIT_PERSON_DETAIL,\r\n    CLOSE_EDIT_PERSON_DETAIL,\r\n    OPEN_ADD_PERSON_DETAIL,\r\n    OPEN_EDIT_PERSON_BUSINESS_DETAIL,\r\n    CLOSE_EDIT_PERSON_BUSINESS_DETAIL, OPEN_ADD_PERSON_BUSINESS_DETAIL\r\n} from './types';\r\nimport getPersonDetailTableTitle from \"../../components/pages/persons/redux_person_view/PersonDetailConstTableTitles\";\r\n\r\nexport const personOpenEditDetail = (personDetail, keyName) => dispatch => {\r\n    let type;\r\n    const data = {person_detail: personDetail, source: keyName};\r\n    if (keyName === \"person_ip\" || keyName ===\"person_companies_CEO\" || keyName ===\"person_companies_founder\") {\r\n        type = OPEN_EDIT_PERSON_BUSINESS_DETAIL\r\n    }else{\r\n        type = OPEN_EDIT_PERSON_DETAIL\r\n    }\r\n\r\n    return  (\r\n            dispatch({\r\n                type: type,\r\n                payload: data\r\n            })\r\n    );\r\n};\r\n\r\nexport const personOpenAddDetail = (keyName,business_id=null) => dispatch => {\r\n    let type;\r\n    let person_detail = getPersonDetailTableTitle(keyName);\r\n    let newObj = Object.fromEntries(Object.entries(person_detail).map(([key,value]) => {\r\n        value=null;\r\n            return ([key, value])\r\n    }));\r\n    if (keyName === \"person_ip\" || keyName ===\"person_companies_CEO\" || keyName ===\"person_companies_founder\") {\r\n        type = OPEN_ADD_PERSON_BUSINESS_DETAIL\r\n    }else{\r\n        type = OPEN_ADD_PERSON_DETAIL\r\n    }\r\n\r\n    const data = {person_detail: newObj, source: keyName, business_id: business_id };\r\n    return  (\r\n            dispatch({\r\n                type: type,\r\n                payload: data\r\n            })\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport const personCloseEditDetail = () => dispatch => {\r\n    return  (\r\n            dispatch({\r\n                type: CLOSE_EDIT_PERSON_DETAIL\r\n            })\r\n    );\r\n};\r\n\r\nexport const personCloseEditBusinessDetail = () => dispatch => {\r\n    return  (\r\n            dispatch({\r\n                type: CLOSE_EDIT_PERSON_BUSINESS_DETAIL\r\n            })\r\n    );\r\n};\r\n","import React, {Component} from 'react';\r\nimport {getPersonDetails, personDeleteDetail, personDeleteBusinessDetail} from '../../../../action/person/person_detail';\r\nimport {personOpenEditDetail} from '../../../../action/person/person_detail_edit'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PersonDetailActionButtons extends Component {\r\n      static propTypes = {\r\n          person_details: PropTypes.object.isRequired,\r\n          getPersonDetails: PropTypes.func.isRequired,\r\n          personDeleteDetail: PropTypes.func.isRequired,\r\n          personOpenEditDetail: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n    getStyleOnEdit=(editMode) => {\r\n        return {\r\n            marginRight: '2px',\r\n            display: editMode ? 'none' : 'inline-block'\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <td rowSpan={this.props.rowSpan } className=\"text-right\">\r\n                    <button className=\"btn btn-outline-info btn-sm\"\r\n                            style={ this.getStyleOnEdit(this.props.data.is_edit_mode) }\r\n                            onClick={() =>this.props.personOpenEditDetail(this.props.data, this.props.keyName) }\r\n                    >\r\n                        <i className=\"fas fa-edit\"></i></button>\r\n                    <button className=\"btn btn-danger btn-sm\"\r\n                    onClick={() =>this.props.personDeleteDetail(this.props.data.id, this.props.keyName) }\r\n                    >\r\n                        <i className=\"far fa-trash-alt\"></i></button>\r\n                </td>\r\n            </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    person_details: state.person_details.person_details,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{ getPersonDetails, personDeleteDetail, personOpenEditDetail, personDeleteBusinessDetail})(PersonDetailActionButtons);","import React, {Component} from \"react\";\r\nimport {Modal}  from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {personSaveAddDetail, personUpdateDetail} from \"../../../../action/person/person_detail\";\r\nimport {personCloseEditDetail} from \"../../../../action/person/person_detail_edit\";\r\nimport getPersonDetailTableTitle, {main_titles} from \"./PersonDetailConstTableTitles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PersonDetailModal extends Component {\r\n          static propTypes = {\r\n              person: PropTypes.object.isRequired,\r\n              person_show_modal: PropTypes.object.isRequired,\r\n              personSaveAddDetail: PropTypes.func.isRequired,\r\n              personUpdateDetail: PropTypes.func.isRequired,\r\n              personCloseEditDetail: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n    state={\r\n        person_detail: this.props.person_show_modal.person_detail,\r\n    };\r\n\r\n    onChange=(e) => this.setState({\r\n        person_detail: Object.fromEntries(Object.entries(this.state.person_detail).map(([key, value]) => {\r\n            if (key === e.target.name) {\r\n                value=e.target.value\r\n            }\r\n            return (\r\n                [key, value])\r\n        }))\r\n    });\r\n\r\n    onUpdate = () => {\r\n        this.props.personUpdateDetail(this.state.person_detail, this.props.person_show_modal.title_for);\r\n\r\n    };\r\n\r\n    handleClick = () => {\r\n        let isValid=false;\r\n        const {personUpdateDetail, personSaveAddDetail, personCloseEditDetail}=this.props;\r\n        if (this.state.person_detail.id) {\r\n            personUpdateDetail(this.state.person_detail, this.props.person_show_modal.title_for);\r\n        } else {\r\n            let newArr=Object.values(this.state.person_detail).filter(value => {\r\n                return value !== null\r\n            });\r\n            newArr.length === 0 ? isValid=false : isValid=true;\r\n            if (isValid) {\r\n                personSaveAddDetail(this.state.person_detail, this.props.person_show_modal.title_for, this.props.person.id, this.props.person_show_modal.business_id);\r\n            } else {\r\n                console.log(\"Не заполнено ни одно поле!\");\r\n                personCloseEditDetail()\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const title=getPersonDetailTableTitle(this.props.person_show_modal.title_for);\r\n        let type =\"text\";\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    show={ this.props.person_show_modal.display }\r\n                    onHide={ this.props.personCloseEditDetail }\r\n                    size=\"lg\"\r\n                >\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            { main_titles[this.props.person_show_modal.title_for] }\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                { Object.entries(this.state.person_detail).map(([key, value]) => {\r\n                                    if (key !== 'id' && key !== 'person' && key !== 'ip'&& key !== 'company') {\r\n                                        if (key.indexOf(\"date_\")>0)\r\n                                            {type = \"date\"}else{type = \"text\" }\r\n                                        return (\r\n                                            <div key = { key } className=\"form-group\">\r\n                                                <label htmlFor={ key }\r\n                                                       className=\"col-form-label\">{ title[key] }:</label>\r\n                                                <input type={ type }\r\n                                                       className=\"form-control\"\r\n                                                       name={ key }\r\n                                                       value={ value }\r\n                                                       onChange={ this.onChange }\r\n                                                />\r\n                                            </div>)\r\n                                    }\r\n                                    return null\r\n                                }) }\r\n                            </form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-danger\" onClick={ this.props.personCloseEditDetail }>Закрыть</button>\r\n                        <button className=\"btn btn-primary\" onClick={ this.handleClick }>Сохранить</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state => (\r\n    {\r\n        person:  state.person_details.person_details.person,\r\n        person_show_modal: state.person_detail_edit.person_show_modal\r\n\r\n    });\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    personCloseEditDetail,\r\n    personUpdateDetail,\r\n    personSaveAddDetail\r\n})(PersonDetailModal);","import React, {Component} from \"react\";\r\nimport PersonDetailViewTableHeaders from './PersonDetailViewTableHeaders';\r\nimport PersonDetailViewTableBody from \"./PersonDetailViewTableBody\";\r\nimport PersonDetailActionButtons from \"./PersonDetailActionButtons\";\r\nimport PersonDetailModal from \"./PersonDetailModal\"\r\nimport {connect} from \"react-redux\";\r\nimport {getPersonDetails, personDeleteDetail} from \"../../../../action/person/person_detail\";\r\nimport {personCloseEditDetail, personOpenAddDetail, personOpenEditDetail} from '../../../../action/person/person_detail_edit'\r\nimport  {main_titles} from \"./PersonDetailConstTableTitles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nclass PersonDetailSingleBlock extends Component {\r\n\r\n    static propTypes = {\r\n        person: PropTypes.any,\r\n        getPersonDetails: PropTypes.func.isRequired,\r\n        personDeleteDetail: PropTypes.func.isRequired,\r\n        personCloseEditDetail: PropTypes.func.isRequired,\r\n        personOpenAddDetail: PropTypes.func.isRequired,\r\n        personOpenEditDetail: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h6>{main_titles[this.props.keyName]}</h6>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-sm table-striped\">\r\n                        <thead key=\"thead\">\r\n                        <tr>\r\n                            <PersonDetailViewTableHeaders key={ this.props.keyName } data={ this.props.keyName }/>\r\n                            <th scope=\"col\" className=\"text-right\">Действие</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody key=\"tbody\">\r\n                        { this.props.data.map((item, index) => <tr key={ item.id }>\r\n                            <th scope=\"row\"> { index + 1 }</th>\r\n                            <PersonDetailViewTableBody key={ item.id } data={ item }/>\r\n                            <PersonDetailActionButtons data={ item } keyName={ this.props.keyName } rowSpan=\"1\"/>\r\n                        </tr>) }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn btn-primary btn-sm\" onClick={() =>this.props.personOpenAddDetail(this.props.keyName, this.props.business_id)}>Добавить</button>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    person_details: state.person_details.person_details\r\n\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getPersonDetails, personDeleteDetail, personCloseEditDetail,personOpenEditDetail,personOpenAddDetail })(PersonDetailSingleBlock);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\"\r\n\r\nfunction PersonMainData(props) {\r\n    const {id, first_name, last_name, middle_name, date_birthday, person_characteristic, person_comment, person_negative}=props.data;\r\n    if (props.data) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h2>{ first_name } { last_name } { middle_name } </h2>\r\n                    <div className=\"text-right\">\r\n                        <Link to={ `/person_update/${ id }` } className=\"btn btn-outline-info\">\r\n                            <i className=\"fas fa-edit\"></i></Link>\r\n                    </div>\r\n                    <p>Дата рождения: { moment(date_birthday || null).calendar() }  </p>\r\n                    <p>Характеристика: { person_characteristic }</p>\r\n                    <p>Комментарий: { person_comment }</p>\r\n                    <p>Негатив: { person_negative }</p>\r\n                </div>\r\n            </React.Fragment>);\r\n    }\r\n    return null\r\n}\r\n\r\nexport default PersonMainData;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PersonDetailSingleBlock from \"./PersonDetailSingleBlock\";\r\nimport {tab_titles} from \"./PersonDetailConstTableTitles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'div'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    'aria-controls': `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    person_details: state.person_details.person_details,\r\n\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(function TabsWrappedLabel(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs\" variant=\"fullWidth\">\r\n          {Object.entries(props.data).map(([key, value], index) => {\r\n            return (<Tab key={key} label={tab_titles[key]} {...a11yProps({index})} />)\r\n          })\r\n          }\r\n        </Tabs>\r\n      </AppBar>\r\n      { Object.entries(props.data).map(([key, dataValue], index) => {\r\n                        return (\r\n                            <>\r\n                                <TabPanel value={value} index={index}>\r\n                                  <PersonDetailSingleBlock key={ key } keyName={ key } data={ dataValue }/>\r\n                                </TabPanel>\r\n                            </>)\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n})\r\n","import React, {Component} from \"react\";\r\nimport PersonDetailActionButtons from \"./PersonDetailActionButtons\";\r\n\r\n\r\nclass PersonDetailBusinessIPTableBody extends Component {\r\n\r\n    additionOkved(value) {\r\n        return (\r\n            value.map(( value,index ) => {\r\n                if ( index !== 0 ) {\r\n                    return (\r\n                        <tr key ={ index }>\r\n                            <td>{ value.ip_detail_okved }</td>\r\n                        </tr>)\r\n                }\r\n            }))\r\n    };\r\n\r\n\r\n    render(){\r\n    let row_span = (this.props.data['business_detail'].length === 0) ? 1 : this.props.data['business_detail'].length;\r\n    return (\r\n        <React.Fragment>\r\n            <tr>\r\n                { Object.entries(this.props.data).map(( [ key, value ] ) => {\r\n                    if ( key !== 'id' && key !== 'person' && key !== 'business_detail' ) {\r\n                        return (\r\n                            <td rowSpan={ row_span } key={ key }>{ value }</td>)\r\n                    }\r\n                }) }\r\n            { (this.props.data['business_detail'].length === 0) ? <td></td> : <td rowSpan=\"1\" key={ \"business_detail\" }>{ this.props.data['business_detail'][0][ \"ip_detail_okved\" ] }</td>}\r\n                <PersonDetailActionButtons data={this.props.data} keyName={ this.props.keyName } rowSpan={ row_span } />\r\n            </tr>\r\n\r\n            { (this.props.data['business_detail'].length === 0) ? null : this.additionOkved(this.props.data.business_detail)}\r\n                </React.Fragment>);\r\n                }\r\n}\r\n\r\nexport default PersonDetailBusinessIPTableBody;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PersonDetailBusinessIPTableBody from \"./PersonDetailBusinessIPTableBody\";\r\nimport {personOpenAddDetail} from \"../../../../action/person/person_detail_edit\";\r\nimport {main_titles} from \"./PersonDetailConstTableTitles\";\r\n\r\n\r\nclass PersonDetailBusinessIP extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"mx-auto my-2 my-sm-3 my-lg-4 p-3\">\r\n                <h6>{main_titles[this.props.keyName]}</h6>\r\n                    <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th rowSpan=\"1\">Название ИП</th>\r\n                        <th rowSpan=\"1\">ИНН</th>\r\n                        <th rowSpan=\"1\">Период работы с</th>\r\n                        <th rowSpan=\"1\">Период работы по</th>\r\n                        <th rowSpan=\"1\">Основной ОКВЕД</th>\r\n                        <th rowSpan=\"1\">Действие</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.props.person_ip.map(( value, index ) => {\r\n                        return (\r\n                            <PersonDetailBusinessIPTableBody key={ index } data={ value } keyName={this.props.keyName}/>)\r\n                    }) }\r\n                    </tbody>\r\n                </table>\r\n                 <div className=\"text-right\">\r\n                    <button className=\"btn btn btn-primary btn-sm\" onClick={() =>this.props.personOpenAddDetail(this.props.keyName)}>Добавить</button>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state => (\r\n    {\r\n        person_ip: state.person_details.person_details.person_ip,\r\n    });\r\n\r\nexport default connect(mapStateToProps, {personOpenAddDetail})(PersonDetailBusinessIP);","import React, {Component} from \"react\";\r\nimport {Modal}  from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {personSaveAddDetail, personUpdateDetail} from \"../../../../action/person/person_detail\";\r\nimport {\r\n    personCloseEditBusinessDetail,\r\n    personCloseEditDetail,\r\n    personCloseEditModalDetail\r\n} from \"../../../../action/person/person_detail_edit\";\r\nimport getPersonDetailTableTitle, {main_titles} from \"./PersonDetailConstTableTitles\";\r\nimport PropTypes from \"prop-types\";\r\nimport PersonDetailSingleBlock from \"./PersonDetailSingleBlock\";\r\n\r\nclass PersonDetailBusinessModal extends Component {\r\n          static propTypes = {\r\n              person: PropTypes.object.isRequired,\r\n              person_show_modal_business: PropTypes.object.isRequired,\r\n              personSaveAddDetail: PropTypes.func.isRequired,\r\n              personUpdateDetail: PropTypes.func.isRequired,\r\n              personCloseEditDetail: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n    state={\r\n        person_detail: this.props.person_show_modal_business.person_detail,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.person_show_modal_business !== this.props.person_show_modal_business) {\r\n            this.setState({\r\n                person_detail: this.props.person_show_modal_business.person_detail,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    onChange=(e) => this.setState({\r\n        person_detail: Object.fromEntries(Object.entries(this.state.person_detail).map(([key, value]) => {\r\n            if (key === e.target.name) {\r\n                value=e.target.value\r\n            }\r\n            return (\r\n                [key, value])\r\n        }))\r\n    });\r\n\r\n    onUpdate = () => {\r\n        this.props.personUpdateDetail(this.state.person_detail, this.props.person_show_modal.title_for);\r\n\r\n    };\r\n\r\n    handleClick = () => {\r\n        let isValid=false;\r\n        const {personUpdateDetail, personSaveAddDetail, personCloseEditBusinessDetail}=this.props;\r\n        if (this.state.person_detail.id) {\r\n            personUpdateDetail(this.state.person_detail, this.props.person_show_modal_business.title_for);\r\n        } else {\r\n            let newArr=Object.values(this.state.person_detail).filter(value => {\r\n                return value !== null\r\n            });\r\n            newArr.length === 0 ? isValid=false : isValid=true;\r\n            if (isValid) {\r\n                personSaveAddDetail(this.state.person_detail, this.props.person_show_modal_business.title_for, this.props.person.id);\r\n            } else {\r\n                console.log(\"Не заполнено ни одно поле!\");\r\n                personCloseEditBusinessDetail()\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const title=getPersonDetailTableTitle(this.props.person_show_modal_business.title_for);\r\n        let type =\"text\";\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    show={ this.props.person_show_modal_business.display }\r\n                    onHide={ this.props.personCloseEditBusinessDetail }\r\n                    size=\"lg\"\r\n                >\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            { main_titles[this.props.person_show_modal_business.title_for] }\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"modal-body\">\r\n                                { Object.entries(this.state.person_detail).map(([key, value]) => {\r\n                                    if (key !== 'id' && key !== 'person' && key !== 'business_detail') {\r\n                                        if (key.indexOf(\"date_\")>0)\r\n                                            {type = \"date\"}else{type = \"text\" }\r\n                                        return (\r\n                                            <div key = { key } className=\"form-group\">\r\n                                                <label htmlFor={ key }\r\n                                                       className=\"col-form-label\">{ title[key] }:</label>\r\n                                                <input type={ type }\r\n                                                       className=\"form-control\"\r\n                                                       name={ key }\r\n                                                       value={ value }\r\n                                                       onChange={ this.onChange }\r\n                                                />\r\n                                            </div>)\r\n                                    } else if (key === 'business_detail'){\r\n                                        let businessKey = this.props.person_show_modal_business.title_for + \"_\" + key;\r\n                                        return (\r\n                                             <PersonDetailSingleBlock key={ key } keyName={ businessKey } data={ value } business_id={this.state.person_detail.id}/>\r\n                                             )\r\n                                    }\r\n                                    return null\r\n                                }) }\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-danger\" onClick={ this.props.personCloseEditBusinessDetail }>Закрыть</button>\r\n                        <button className=\"btn btn-primary\" onClick={ this.handleClick }>Сохранить</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state => (\r\n    {\r\n        person:  state.person_details.person_details.person,\r\n        person_show_modal_business: state.person_detail_edit.person_show_modal_business\r\n\r\n    });\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    personCloseEditBusinessDetail,\r\n    personUpdateDetail,\r\n    personSaveAddDetail\r\n})(PersonDetailBusinessModal);","import React, {Component} from \"react\";\r\nimport PersonDetailActionButtons from \"./PersonDetailActionButtons\";\r\n\r\n\r\nclass PersonDetailBusinessCompanyTableBody extends Component {\r\n\r\n\r\n\r\n    firstTD(data){\r\n        return (\r\n            <>\r\n                <td rowSpan=\"1\">{ data.first_name }</td>\r\n                <td rowSpan=\"1\">{ data.last_name }</td>\r\n                <td rowSpan=\"1\">{ data.middle_name }</td>\r\n                <td rowSpan=\"1\">{ data.inn }</td>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    additionTD(value) {\r\n        return (\r\n            value.map(( value,index ) => {\r\n                if ( index !== 0 ) {\r\n                    return (\r\n                        <tr key ={ index }>\r\n                            <td rowSpan=\"1\">{ value.first_name }</td>\r\n                            <td rowSpan=\"1\">{ value.last_name }</td>\r\n                            <td rowSpan=\"1\">{ value.middle_name }</td>\r\n                            <td rowSpan=\"1\">{ value.inn }</td>\r\n                        </tr>)\r\n                }\r\n            }))\r\n    };\r\n\r\n\r\n    render(){\r\n        let count_td = 0;\r\n        let row_span = (this.props.data['business_detail'].length === 0) ? 1 : this.props.data['business_detail'].length;\r\n    if (this.props.keyName === 'person_companies_CEO'){\r\n        count_td = 4;\r\n    } else if (this.props.keyName === 'person_companies_founder'){\r\n        count_td = 5;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <tr>\r\n                { Object.entries(this.props.data).map(( [ key, value ] ) => {\r\n                    if ( key !== 'id' && key !== 'person' && key !== 'business_detail' ) {\r\n                        return (\r\n                            <td rowSpan={ row_span } key={ key }>{ value }</td>)\r\n                    }\r\n                }) }\r\n            { (this.props.data['business_detail'].length === 0) ? <><td></td><td></td><td></td><td></td></> : this.firstTD(this.props.data['business_detail'][0])}\r\n                <PersonDetailActionButtons data={this.props.data} keyName={ this.props.keyName } rowSpan={ row_span } />\r\n            </tr>\r\n\r\n            { (this.props.data['business_detail'].length === 0) ? null : this.additionTD(this.props.data['business_detail'])}\r\n                </React.Fragment>);\r\n                }\r\n}\r\n\r\nexport default PersonDetailBusinessCompanyTableBody;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PersonDetailBusinessIPTableBody from \"./PersonDetailBusinessIPTableBody\";\r\nimport {personOpenAddDetail} from \"../../../../action/person/person_detail_edit\";\r\nimport PersonDetailBusinessCompanyTableBody from \"./PersonDetailBusinessCompanyTableBody\";\r\nimport {main_titles} from \"./PersonDetailConstTableTitles\";\r\n\r\n\r\nclass PersonDetailBusinessCompanyCEO extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card mx-auto my-2 my-sm-3 my-lg-4 p-3\">\r\n                <h6>{main_titles[this.props.keyName]}</h6>\r\n                    <table className=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                    <tr>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Название компании</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">ИНН</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Ген. дир с</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Ген. дир по</th>\r\n                        <th colSpan=\"4\" rowSpan=\"1\">Учредители</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Действие</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Имя</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Фамилия</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Отчество</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">ИНН</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.props.person_companies_CEO.map(( value, index ) => {\r\n                        return (\r\n                            <PersonDetailBusinessCompanyTableBody key={ index } data={ value } keyName={this.props.keyName}/>)\r\n                    }) }\r\n                    </tbody>\r\n                </table>\r\n                 <div className=\"text-right\">\r\n                    <button className=\"btn btn btn-primary btn-sm\" onClick={() =>this.props.personOpenAddDetail(this.props.keyName)}>Добавить</button>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state => (\r\n    {\r\n        person_companies_CEO: state.person_details.person_details.person_companies_CEO,\r\n    });\r\n\r\nexport default connect(mapStateToProps, {personOpenAddDetail})(PersonDetailBusinessCompanyCEO);","import React, {Component} from \"react\";\r\nimport PersonDetailActionButtons from \"./PersonDetailActionButtons\";\r\n\r\n\r\nclass PersonDetailBusinessCompanyTableBodyFounder extends Component {\r\n\r\n\r\n\r\n    firstTD(data){\r\n        return (\r\n            <>\r\n                <td rowSpan=\"1\">{ data.first_name }</td>\r\n                <td rowSpan=\"1\">{ data.last_name }</td>\r\n                <td rowSpan=\"1\">{ data.middle_name }</td>\r\n                <td rowSpan=\"1\">{ data.inn }</td>\r\n                <td rowSpan=\"1\">{ data.company_share }</td>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    additionTD(value) {\r\n        return (\r\n            value.map(( value,index ) => {\r\n                if ( index !== 0 ) {\r\n                    return (\r\n                        <tr key ={ index }>\r\n                            <td rowSpan=\"1\">{ value.first_name }</td>\r\n                            <td rowSpan=\"1\">{ value.last_name }</td>\r\n                            <td rowSpan=\"1\">{ value.middle_name }</td>\r\n                            <td rowSpan=\"1\">{ value.inn }</td>\r\n                            <td rowSpan=\"1\">{ value.company_share }</td>\r\n                        </tr>)\r\n                }\r\n            }))\r\n    };\r\n\r\n\r\n    render(){\r\n        let count_td = 0;\r\n        let row_span = (this.props.data['business_detail'].length === 0) ? 1 : this.props.data['business_detail'].length;\r\n    if (this.props.keyName === 'person_companies_CEO'){\r\n        count_td = 4;\r\n    } else if (this.props.keyName === 'person_companies_founder'){\r\n        count_td = 5;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <tr>\r\n                { Object.entries(this.props.data).map(( [ key, value ] ) => {\r\n                    if ( key !== 'id' && key !== 'person' && key !== 'business_detail' ) {\r\n                        return (\r\n                            <td rowSpan={ row_span } key={ key }>{ value }</td>)\r\n                    }\r\n                }) }\r\n            { (this.props.data['business_detail'].length === 0) ? <><td></td><td></td><td></td><td></td><td></td></> : this.firstTD(this.props.data['business_detail'][0])}\r\n                <PersonDetailActionButtons data={this.props.data} keyName={ this.props.keyName } rowSpan={ row_span } />\r\n            </tr>\r\n\r\n            { (this.props.data['business_detail'].length === 0) ? null : this.additionTD(this.props.data['business_detail'])}\r\n                </React.Fragment>);\r\n                }\r\n}\r\n\r\nexport default PersonDetailBusinessCompanyTableBodyFounder;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PersonDetailBusinessIPTableBody from \"./PersonDetailBusinessIPTableBody\";\r\nimport {personOpenAddDetail} from \"../../../../action/person/person_detail_edit\";\r\nimport PersonDetailBusinessCompanyTableBody from \"./PersonDetailBusinessCompanyTableBody\";\r\nimport {main_titles} from \"./PersonDetailConstTableTitles\";\r\nimport PersonDetailBusinessCompanyTableBodyFounder from \"./PersonDetailBusinessCompanyTableBodyFounder\";\r\n\r\n\r\nclass PersonDetailBusinessCompanyFounder extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\" card mx-auto my-2 my-sm-3 my-lg-4 p-3\">\r\n                <h6>{main_titles[this.props.keyName]}</h6>\r\n                    <table className=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                    <tr>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Название компании</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">ИНН</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Доля в компании</th>\r\n                        <th colSpan=\"5\" rowSpan=\"1\">Учредители</th>\r\n                        <th colSpan=\"1\" rowSpan=\"2\">Действие</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Имя</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Фамилия</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Отчество</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">ИНН</th>\r\n                        <th colSpan=\"1\" rowSpan=\"1\">Доля</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { this.props.person_companies_founder.map(( value, index ) => {\r\n                        return (\r\n                            <PersonDetailBusinessCompanyTableBodyFounder key={ index } data={ value } keyName={this.props.keyName}/>)\r\n                    }) }\r\n                    </tbody>\r\n                </table>\r\n                 <div className=\"text-right\">\r\n                    <button className=\"btn btn btn-primary btn-sm\" onClick={() =>this.props.personOpenAddDetail(this.props.keyName)}>Добавить</button>\r\n                </div>\r\n                </div>\r\n            </React.Fragment>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state => (\r\n    {\r\n        person_companies_founder: state.person_details.person_details.person_companies_founder,\r\n    });\r\n\r\nexport default connect(mapStateToProps, {personOpenAddDetail})(PersonDetailBusinessCompanyFounder);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getPersonDetails, personDeleteDetail } from '../../../../action/person/person_detail';\r\nimport {connect} from \"react-redux\";\r\nimport PersonsService from \"../persons_service/PersonsService\";\r\nimport PersonDetailSingleBlock from \"./PersonDetailSingleBlock\";\r\nimport  { Link } from 'react-router-dom'\r\nimport PersonMainData from \"./PersonMainData\";\r\nimport TabsWrappedLabel from \"./PersonDetailTabs\";\r\nimport PersonDetailBusinessIP from \"./PersonDetailBusinessIP\";\r\nimport PersonDetailModal from \"./PersonDetailModal\";\r\nimport PersonDetailBusinessModal from \"./PersonDetailBusinessIPModal\";\r\nimport PersonDetailBusinessCompanyCEO from \"./PersonDetailBusinessCompanyCEO\";\r\nimport PersonDetailBusinessCompanyFounder from \"./PersonDetailBusinessCompanyFounder\";\r\n\r\n\r\nconst  personsService  =  new PersonsService();\r\n\r\nclass PersonBase extends Component {\r\n\r\n    static propTypes={\r\n        person_details: PropTypes.object.isRequired,\r\n        getPersonDetails: PropTypes.func.isRequired,\r\n        personDeleteDetail: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const {match: {params}}=this.props;\r\n        if (params && params.id) {\r\n            this.props.getPersonDetails(params.id);\r\n        }\r\n    }\r\n\r\n    //PERSONS FUNCTION\r\n    handleDeletePreviousLastName(e, id) {\r\n        var self=this;\r\n        const source=\"PersonPreviousLastName\"\r\n        personsService.PersonDeletePreviousLastName({id: id, source: source}).then(() => {\r\n            var newArr=self.state.person_previous_last_names.filter(function (obj) {\r\n                return obj.id !== id;\r\n            });\r\n            self.setState({person_previous_last_names: newArr})\r\n        });\r\n    }\r\n\r\n    handleCreatePreviousLastName(last_name) {\r\n        var self=this;\r\n        const source=\"PersonPreviousLastName\"\r\n        personsService.createPersonPreviousLastName({\r\n            person_id: self.state.person.id, last_name: last_name, source: source\r\n        }).then((res) => {\r\n            self.setState({person_previous_last_names: [...self.state.person_previous_last_names, res.data]});\r\n        }).catch(() => {\r\n            alert('There was an error! Please re-check your form.');\r\n        });\r\n    }\r\n\r\n    handleEditPreviousLastName(id) {\r\n        var self=this;\r\n        self.setState({\r\n            person_previous_last_names: self.state.person_previous_last_names.map(last_name => {\r\n                if (last_name.id === id) {\r\n                    last_name.is_edit_mode= !last_name.is_edit_mode\r\n                }\r\n                return last_name\r\n            })\r\n        })\r\n    }\r\n\r\n    handleOnChangeEdit(e, person_previous_last_name) {\r\n        var self=this;\r\n        self.setState({\r\n            person_previous_last_names: self.state.person_previous_last_names.map(last_name => {\r\n                if (last_name.id === person_previous_last_name.id) {\r\n                    last_name.last_name=e.target.value\r\n                }\r\n                return last_name\r\n            })\r\n        })\r\n    }\r\n\r\n    handleConfirmEditPreviousLastName(id) {\r\n        var self=this;\r\n        const source=\"PersonPreviousLastName\"\r\n        personsService.updatePersonPreviousLastName({\r\n            data: self.state.person_previous_last_names.filter(item => item.id === id), source: source\r\n        }).then((res) => {\r\n            self.setState({\r\n                person_previous_last_names: self.state.person_previous_last_names.map(last_name => {\r\n                    if (last_name.id === res.data.id) {\r\n                        last_name.is_edit_mode= !last_name.is_edit_mode\r\n                    }\r\n                    return last_name\r\n                })\r\n            })\r\n        }).catch(() => {\r\n            alert('There was an error!');\r\n        })\r\n    }\r\n\r\n    showModal=(display) => {\r\n            if (display) {\r\n                return (\r\n                    <PersonDetailModal />)\r\n            } else {\r\n                return (\r\n                    <div></div>)\r\n            }\r\n        };\r\n    showModalBusiness=(display) => {\r\n        if (display) {\r\n                return (\r\n                    <PersonDetailBusinessModal />)\r\n            } else {\r\n                return (\r\n                    <div></div>)\r\n            }\r\n        };\r\n\r\n\r\n    render() {\r\n        if ( this.props.person_details.person ) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <PersonMainData key={ 'person' } data={ this.props.person_details.person }/>\r\n                    { Object.entries(this.props.person_details).map(( [ key, value ] ) => {\r\n                        if ( key === 'person_social_relations' || key === 'person_social_relations_group' ) {\r\n                            return (\r\n\r\n                                    <div key={ key } className=\"card mx-auto my-2 my-sm-3 my-lg-4 p-3\">\r\n                                        <TabsWrappedLabel key={ key } keyName={ key } data={ value }/>\r\n                                    </div>\r\n                                )\r\n                        }else if ( key === 'person_ip')  {\r\n                            return (\r\n                                <PersonDetailBusinessIP key={ key } keyName={ key }/>\r\n                            )\r\n                        }else if ( key === 'person_companies_CEO')  {\r\n                            return (\r\n                                <PersonDetailBusinessCompanyCEO key={ key } keyName={ key }/>\r\n                            )\r\n                        }else if ( key === 'person_companies_founder')  {\r\n                            return (\r\n                                <PersonDetailBusinessCompanyFounder key={ key } keyName={ key }/>\r\n                            )\r\n                        }\r\n                        else if( key !== 'person') {\r\n                            return (\r\n                                <PersonDetailSingleBlock key={ key } keyName={ key } data={ value }/>)\r\n                        }\r\n                    }) }\r\n                    { this.showModal(this.props.person_show_modal.display) }\r\n                    { this.showModalBusiness(this.props.person_show_modal_business.display) }\r\n                </div>);\r\n        }\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    person_details: state.person_details.person_details,\r\n    person_show_modal: state.person_detail_edit.person_show_modal,\r\n    person_show_modal_business: state.person_detail_edit.person_show_modal_business\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getPersonDetails, personDeleteDetail })(PersonBase);","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return(\r\n        <div className=\"container\">\r\n            <footer>\r\n                <div className=\"card-body\">\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from \"prop-types\";\r\nimport {addPerson, deletePerson, updatePerson} from \"../../../../action/person/persons\";\r\nimport {getPersonDetails} from \"../../../../action/person/person_detail\";\r\nimport {Modal}  from \"react-bootstrap\";\r\n\r\n\r\nclass PersonAddUpdate extends Component {\r\n    static propTypes ={\r\n        person: PropTypes.any.isRequired,\r\n        getPersonDetails: PropTypes.func.isRequired,\r\n        addPerson: PropTypes.func.isRequired,\r\n        updatePerson: PropTypes.func.isRequired,\r\n        deletePerson: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state={\r\n        id: this.props.person ? this.props.person.id : null,\r\n        first_name: this.props.person ? this.props.person.first_name : '',\r\n        last_name: this.props.person ? this.props.person.last_name : '',\r\n        middle_name: this.props.person ? this.props.person.middle_name : '',\r\n        date_birthday: this.props.person ? this.props.person.date_birthday : null,\r\n        person_characteristic: this.props.person ? this.props.person.person_characteristic : '',\r\n        person_comment: this.props.person ? this.props.person.person_comment : '',\r\n        person_negative: this.props.person ? this.props.person.person_negative : '',\r\n        errors: {},\r\n        open: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.person && (this.props.person.id !== prevProps.person.id)) {\r\n            this.setState({\r\n                id: this.props.person.id,\r\n                first_name: this.props.person.first_name,\r\n                last_name: this.props.person.last_name,\r\n                middle_name: this.props.person.middle_name,\r\n                date_birthday: this.props.person.date_birthday,\r\n                person_characteristic: this.props.person.person_characteristic,\r\n                person_comment: this.props.person.person_comment,\r\n                person_negative: this.props.person.person_negative,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const {match: {params}}=this.props;\r\n        if (params && params.id) {\r\n            this.props.getPersonDetails(params.id);\r\n        }\r\n    }\r\n\r\n    onChange=(e) => this.setState({\r\n                [e.target.name]: e.target.value\r\n        });\r\n\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        // validation\r\n        let errors = {};\r\n        if (this.state.first_name ==='') errors.first_name = \"Не должно быть пустое\";\r\n        if (this.state.last_name ==='') errors.last_name = \"Не должно быть пустое\";\r\n        this.setState({ errors });\r\n        const isValid = Object.keys(errors).length === 0;\r\n        console.log(isValid);\r\n        if (isValid) {\r\n            const {addPerson, updatePerson}=this.props;\r\n            if (this.state.id){\r\n                updatePerson(this.state);\r\n            }else {\r\n                addPerson(this.state);\r\n            }\r\n        }\r\n    };\r\n\r\n    deleteConfirm = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ open: true });\r\n    };\r\n    handleConfirmedDelete = () => {\r\n        this.props.deletePerson(this.state.id);\r\n    };\r\n    handleCancel = () => this.setState({  open: false });\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form action=\"\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"first_name\">Имя</label>\r\n                        <input className={ classnames(\"form-control\", {\"is-invalid\": !!this.state.errors.first_name}) }\r\n                               type=\"text\"\r\n                               name=\"first_name\"\r\n                               value={ this.state.first_name }\r\n                               onChange={ this.onChange }\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { this.state.errors.first_name }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"last_name\">Фамилия</label>\r\n                        <input className={ classnames(\"form-control\", {\"is-invalid\": !!this.state.errors.last_name}) }\r\n                               type=\"text\"\r\n                               name=\"last_name\"\r\n                               value={ this.state.last_name }\r\n                               onChange={ this.onChange }\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { this.state.errors.last_name }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"middle_name\">Отчество</label>\r\n                        <input className=\"form-control\"\r\n                               type=\"text\"\r\n                               name=\"middle_name\"\r\n                               value={ this.state.middle_name }\r\n                               onChange={ this.onChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"date_birthday\">Отчество</label>\r\n                        <input className=\"form-control\"\r\n                               type=\"date\"\r\n                               name=\"date_birthday\"\r\n                               value={ this.state.date_birthday || \"\" }\r\n                               onChange={ this.onChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"person_characteristic\">Характеристика</label>\r\n                        <textarea className=\"form-control\"\r\n                                  name=\"person_characteristic\"\r\n                                  rows=\"3\"\r\n                                  value={ this.state.person_characteristic || \"\" }\r\n                                  onChange={ this.onChange }\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"person_comment\">Комментарий</label>\r\n                        <textarea className=\"form-control\"\r\n                                    name=\"person_comment\"\r\n                                    rows=\"3\"\r\n                                    value={ this.state.person_comment || \"\" }\r\n                                    onChange={ this.onChange }\r\n                                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"person_negative\">Негатив</label>\r\n                        <textarea className=\"form-control\"\r\n                                  name=\"person_negative\"\r\n                                  rows=\"3\"\r\n                                  value={ this.state.person_negative || \"\" }\r\n                                  onChange={ this.onChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <button className=\"btn btn btn-danger float-left\" onClick ={ this.deleteConfirm }>Удалить</button>\r\n                        <button className=\"btn btn-primary\"  onClick={ this.handleClick }>Сохранить</button>\r\n                    </div>\r\n\r\n                </form>\r\n                <Modal\r\n                    show={ this.state.open }\r\n                    onHide={ this.handleCancel }\r\n                    size=\"lg\"\r\n                >\r\n                    <Modal.Body>\r\n                        <div className=\"modal-body\">\r\n                            Вы уверены, что хотите удалить все данные по этому объекту?\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className=\"btn btn-primary\" onClick={ this.handleCancel }>Закрыть</button>\r\n                        <button className=\"btn btn-danger\" onClick={ this.handleConfirmedDelete }>Удалить</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps (state, props) {\r\n    const {match: {params}}=props;\r\n    if (params && params.id) {\r\n        return {\r\n            person: state.person_details.person_details.person,\r\n            }\r\n        }\r\n    return {person: {}}\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPersonDetails,addPerson, updatePerson, deletePerson})(PersonAddUpdate);","import  { GET_PERSONS } from '../action/person/types.js';\r\n\r\nconst initialState = {\r\n    persons: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_PERSONS:\r\n            return {\r\n                ...state,\r\n                persons: action.payload.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import  { GET_PERSON_DETAILS,DELETE_PERSON_DETAIL,UPDATE_PERSON_DETAIL, SAVE_ADD_PERSON_DETAIL } from '../action/person/types.js';\r\n\r\n\r\nconst initialState ={\r\n    person_details: {\r\n        person: '', person_previous_last_names: [], person_ip: [],\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    let new_person_details = {};\r\n    let person_social_relations={};\r\n    let person_social_relations_group={};\r\n    let person_ip ={};\r\n    let person_companies_CEO = {};\r\n    let person_companies_founder = {};\r\n    switch (action.type) {\r\n        case GET_PERSON_DETAILS:\r\n            return {\r\n                ...state,\r\n                person_details: action.payload\r\n            };\r\n\r\n\r\n        case DELETE_PERSON_DETAIL:\r\n            new_person_details=Object.fromEntries(Object.entries(state.person_details).map(([key, values]) => {\r\n                if (action.payload.source.indexOf('person_social_relations') !== -1 && (action.payload.source.indexOf('person_social_relations_group') !==0)) {\r\n                    person_social_relations=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations\"]).map(([key, values]) => {\r\n                        if (key === action.payload.source) {\r\n                            let newObj=values.filter(function (value) {\r\n                                return ( value.id !== action.payload.id )\r\n                            });\r\n                            return ( [key, newObj] )\r\n                        }\r\n                        return ( [key, values] )\r\n                    }))\r\n                } else if (action.payload.source.indexOf('person_social_relations_group') !== -1) {\r\n                    person_social_relations_group=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations_group\"]).map(([key, values]) => {\r\n                        if (key === action.payload.source) {\r\n                            let newObj=values.filter(function (value) {\r\n                                return ( value.id !== action.payload.id )\r\n                            });\r\n                            return ( [key, newObj] )\r\n                        }\r\n                        return ( [key, values] )\r\n                    }))\r\n                }else if (action.payload.source ==='person_ip_business_detail') {\r\n                person_ip=Object.values(Object.fromEntries(Object.entries(state.person_details[ \"person_ip\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.filter(function ( value ) {\r\n                                return ( value.id !== action.payload.id )\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            }\r\n                else if (action.payload.source ==='person_companies_CEO_business_detail') {\r\n                person_companies_CEO=Object.values(Object.fromEntries(Object.entries(state.person_details[\"person_companies_CEO\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.filter(function ( value ) {\r\n                                return ( value.id !== action.payload.id )\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            } else if (action.payload.source ==='person_companies_founder_business_detail') {\r\n                person_companies_founder=Object.values(Object.fromEntries(Object.entries(state.person_details[\"person_companies_founder\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.filter(function ( value ) {\r\n                                return ( value.id !== action.payload.id )\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            }\r\n                else if (key === action.payload.source) {\r\n                    let newObj=values.filter(function (value) {\r\n                        return ( value.id !== action.payload.id )\r\n                    });\r\n                    return ( [key, newObj] )\r\n                }\r\n                return ( [key, values] )\r\n            }));\r\n            if (Object.keys(person_social_relations).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations});\r\n            } else if (Object.keys(person_social_relations_group).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations_group});\r\n            }else if (Object.keys(person_ip).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_ip});\r\n            }else if (Object.keys(person_companies_CEO).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_CEO});\r\n            }else if (Object.keys(person_companies_founder).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_founder});\r\n            }\r\n            return {\r\n                ...state, person_details: new_person_details\r\n            };\r\n\r\n\r\n        case UPDATE_PERSON_DETAIL:\r\n            if (action.payload.source.indexOf('person_social_relations') !== -1 && (action.payload.source.indexOf('person_social_relations_group') !==0)){\r\n                person_social_relations=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations\"]).map(([key, values]) => {\r\n                    if (key === action.payload.source) {\r\n                    let newArr = values.map(function (value) {\r\n                        if (value.id === action.payload.person_detail.id) {\r\n                            return action.payload.person_detail\r\n                        }\r\n                        return value\r\n                    });\r\n                    return ( [key, newArr] )\r\n                }\r\n                 return ( [key, values] )\r\n                }));\r\n            } else if (action.payload.source.indexOf('person_social_relations_group') !== -1){\r\n                person_social_relations_group=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations_group\"]).map(([key, values]) => {\r\n                    if (key === action.payload.source) {\r\n                    let newArr = values.map(function (value) {\r\n                        if (value.id === action.payload.person_detail.id) {\r\n                            return action.payload.person_detail\r\n                        }\r\n                        return value\r\n                    });\r\n                    return ( [key, newArr] )\r\n                }\r\n                 return ( [key, values] )\r\n                }));\r\n\r\n            } else if (action.payload.source ==='person_ip_business_detail') {\r\n                person_ip=Object.values(Object.fromEntries(Object.entries(state.person_details[ \"person_ip\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.map(function ( value ) {\r\n                                if ( value.id === action.payload.person_detail.id ) {\r\n                                    return action.payload.person_detail\r\n                                }\r\n                                return value\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            }else if (action.payload.source ==='person_companies_CEO_business_detail') {\r\n                person_companies_CEO=Object.values(Object.fromEntries(Object.entries(state.person_details[\"person_companies_CEO\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.map(function ( value ) {\r\n                                if ( value.id === action.payload.person_detail.id ) {\r\n                                    return action.payload.person_detail\r\n                                }\r\n                                return value\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            }\r\n            else if (action.payload.source ==='person_companies_founder_business_detail') {\r\n                person_companies_founder=Object.values(Object.fromEntries(Object.entries(state.person_details[\"person_companies_founder\"]).map(( [ key, values ] ) => {\r\n                   let newObj = Object.fromEntries(Object.entries(values).map(( [ key, nextValues]) => {\r\n                        if (key === \"business_detail\") {\r\n                            let newArr=nextValues.map(function ( value ) {\r\n                                if ( value.id === action.payload.person_detail.id ) {\r\n                                    return action.payload.person_detail\r\n                                }\r\n                                return value\r\n                            });\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }));\r\n                    return ( [key, newObj] )\r\n                })))\r\n\r\n            }\r\n\r\n            else {\r\n                new_person_details=Object.fromEntries(Object.entries(state.person_details).map(([key, values]) => {\r\n                    if (key === action.payload.source) {\r\n                        let newArr=values.map(function (value) {\r\n                            if (value.id === action.payload.person_detail.id) {\r\n                                return action.payload.person_detail\r\n                            }\r\n                            return value\r\n                        });\r\n                        return ( [key, newArr] )\r\n                    }\r\n                    return ( [key, values] )\r\n                }));\r\n            }\r\n\r\n\r\n            if (Object.keys(person_social_relations).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations});\r\n            } else if (Object.keys(person_social_relations_group).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations_group});\r\n            }else if (Object.keys(person_ip).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_ip});\r\n            }else if (Object.keys(person_companies_CEO).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_CEO});\r\n            }else if (Object.keys(person_companies_founder).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_founder});\r\n            }\r\n            return {\r\n                ...state,\r\n                person_details: new_person_details,\r\n            };\r\n\r\n\r\n        case SAVE_ADD_PERSON_DETAIL:\r\n            new_person_details=Object.fromEntries(Object.entries(state.person_details).map(([key, values]) => {\r\n                if (action.payload.source.indexOf('person_social_relations') !== -1 && (action.payload.source.indexOf('person_social_relations_group') !==0)) {\r\n                    person_social_relations=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations\"]).map(([key, values]) => {\r\n                        if (key === action.payload.source) {\r\n                            let newArr=[...state.person_details['person_social_relations'][key], action.payload.person_detail];\r\n                            return ( [key, newArr] )\r\n                        }\r\n                        return (  [key, values] )\r\n                    }));\r\n                } else if (action.payload.source.indexOf('person_social_relations_group') !== -1) {\r\n                    person_social_relations_group=Object.fromEntries(Object.entries(state.person_details[\"person_social_relations_group\"]).map(([key, values]) => {\r\n                        if (key === action.payload.source) {\r\n                            let newArr=[...state.person_details['person_social_relations_group'][key], action.payload.person_detail];\r\n                            return ( [key, newArr] )\r\n                        }\r\n                        return ( [key, values] )\r\n                    }));\r\n                } else if (action.payload.source ==='person_ip_business_detail') {\r\n                    person_ip=Object.values(Object.fromEntries(Object.entries(state.person_details[ \"person_ip\" ]).map(( [ key, values ] ) => {\r\n                        if ( values.id === action.payload.person_detail.ip ) {\r\n                            let newObj=Object.fromEntries(Object.entries(values).map(( [ nextKey, nextValues ] ) => {\r\n                                if ( nextKey === \"business_detail\" ) {\r\n                                    let newArr=[ ...state.person_details[ \"person_ip\" ][ key ][ nextKey ], action.payload.person_detail ];\r\n                                    return (\r\n                                        [ nextKey, newArr ])\r\n                                }\r\n                                return (\r\n                                    [ nextKey, nextValues ])\r\n                            }));\r\n                            return (\r\n                                [ key, newObj ])\r\n                        }\r\n                        return (\r\n                            [ key, values ])\r\n                    })));\r\n                } else if (action.payload.source ==='person_companies_CEO_business_detail') {\r\n                    person_companies_CEO=Object.values(Object.fromEntries(Object.entries(state.person_details[ \"person_companies_CEO\" ]).map(( [ key, values ] ) => {\r\n                        if ( values.id === action.payload.person_detail.ip ) {\r\n                            let newObj=Object.fromEntries(Object.entries(values).map(( [ nextKey, nextValues ] ) => {\r\n                                if ( nextKey === \"business_detail\" ) {\r\n                                    let newArr=[ ...state.person_details[ \"person_companies_CEO\" ][ key ][ nextKey ], action.payload.person_detail ];\r\n                                    return (\r\n                                        [ nextKey, newArr ])\r\n                                }\r\n                                return (\r\n                                    [ nextKey, nextValues ])\r\n                            }));\r\n                            return (\r\n                                [ key, newObj ])\r\n                        }\r\n                        return (\r\n                            [ key, values ])\r\n                    })));\r\n                }\r\n                else if (action.payload.source ==='person_companies_founder_business_detail') {\r\n                    person_companies_founder=Object.values(Object.fromEntries(Object.entries(state.person_details[ \"person_companies_founder\" ]).map(( [ key, values ] ) => {\r\n                        if ( values.id === action.payload.person_detail.ip ) {\r\n                            let newObj=Object.fromEntries(Object.entries(values).map(( [ nextKey, nextValues ] ) => {\r\n                                if ( nextKey === \"business_detail\" ) {\r\n                                    let newArr=[ ...state.person_details[ \"person_companies_founder\" ][ key ][ nextKey ], action.payload.person_detail ];\r\n                                    return (\r\n                                        [ nextKey, newArr ])\r\n                                }\r\n                                return (\r\n                                    [ nextKey, nextValues ])\r\n                            }));\r\n                            return (\r\n                                [ key, newObj ])\r\n                        }\r\n                        return (\r\n                            [ key, values ])\r\n                    })));\r\n                }\r\n\r\n\r\n                   /* let newObj = Object.fromEntries(Object.entries(values).map(( [ nextKey, nextValues]) => {\r\n                        console.log(nextKey)\r\n                        if (nextKey === \"business_detail\") {\r\n                            let newArr=nextValues.map(function ( value ) {\r\n/!*                                console.log(value.id)\r\n                                console.log(action.payload.person_detail)*!/\r\n                                if ( value.id === action.payload.person_detail.ip ) {\r\n                                    console.log(state.person_details['person_social_relations'][key][nextKey])\r\n                                    return [state.person_details['person_social_relations'][key][nextKey], action.payload.person_detail]\r\n                                }\r\n                                return value\r\n                            });\r\n                            console.log(newArr)\r\n                            return ([ key, newArr ])\r\n                        }\r\n                        return ([ key, nextValues ])\r\n                    }*/\r\n                  /* ));\r\n                    return ( [key, newObj] )\r\n                })))\r\n            }*/\r\n\r\n                else if (key === action.payload.source) {\r\n\r\n                    let newArr=[...state.person_details[key], action.payload.person_detail];\r\n                    return ( [key, newArr] )\r\n                }\r\n                return ( [key, values] )\r\n            }));\r\n            if (Object.keys(person_social_relations).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations});\r\n            } else if (Object.keys(person_social_relations_group).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_social_relations_group});\r\n            }else if (Object.keys(person_ip).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_ip});\r\n            }else if (Object.keys(person_companies_CEO).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_CEO});\r\n            }else if (Object.keys(person_companies_founder).length !== 0) {\r\n                new_person_details=Object.assign({}, state.person_details, {person_companies_founder});\r\n            }\r\n\r\n            return {\r\n                ...state, person_details: new_person_details,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {\r\n    OPEN_EDIT_PERSON_DETAIL,\r\n    CLOSE_EDIT_PERSON_DETAIL,\r\n    OPEN_ADD_PERSON_DETAIL,\r\n    OPEN_EDIT_PERSON_BUSINESS_DETAIL,\r\n    CLOSE_EDIT_PERSON_BUSINESS_DETAIL,\r\n    OPEN_ADD_PERSON_BUSINESS_DETAIL, UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL\r\n} from \"../action/person/types\";\r\n\r\n\r\nconst initialState = {\r\n    person_show_modal: {\r\n        display: false,\r\n        title_for: \"\",\r\n        person_detail: {},\r\n        isNew: false,\r\n        isEdit: false,\r\n        business_id: \"\",\r\n    },\r\n    person_show_modal_business: {\r\n        display: false,\r\n        title_for: \"\",\r\n        person_detail: {},\r\n        isNew: false,\r\n        isEdit: false,\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action){\r\n    switch (action.type) {\r\n          case OPEN_ADD_PERSON_DETAIL:\r\n              return {\r\n                ...state,\r\n                  person_show_modal: {\r\n                    display: true,\r\n                    title_for: action.payload.source,\r\n                    person_detail: action.payload.person_detail,\r\n                    business_id: action.payload.business_id,\r\n                    isNew: true,\r\n                    isEdit: false,\r\n                },\r\n                  person_show_modal_business: {\r\n                    display: false,\r\n                    title_for: state.person_show_modal_business.title_for,\r\n                    person_detail: state.person_show_modal_business.person_detail,\r\n                    isNew: state.person_show_modal_business.isNew,\r\n                    isEdit: false,\r\n\r\n                }\r\n            };\r\n\r\n\r\n        case OPEN_EDIT_PERSON_DETAIL:\r\n            return {\r\n                ...state, person_show_modal: {\r\n                    display: true,\r\n                    title_for: action.payload.source,\r\n                    person_detail: action.payload.person_detail,\r\n                    isNew: false,\r\n                    isEdit: true,\r\n                },\r\n                person_show_modal_business: {\r\n                    display: false,\r\n                    title_for: state.person_show_modal_business.title_for,\r\n                    person_detail: state.person_show_modal_business.person_detail,\r\n                    isNew: state.person_show_modal_business.isNew,\r\n                    isEdit: state.person_show_modal_business.isEdit,\r\n                }\r\n            };\r\n        case CLOSE_EDIT_PERSON_DETAIL:\r\n            if (state.person_show_modal.isNew && state.person_show_modal_business.title_for !==\"\" && action.payload) {\r\n                state.person_show_modal_business.person_detail.business_detail.push(action.payload);\r\n            }\r\n            if (state.person_show_modal.isEdit && state.person_show_modal_business.title_for !==\"\" && action.payload) {\r\n                  state.person_show_modal_business.person_detail=Object.fromEntries(Object.entries(state.person_show_modal_business.person_detail).map(([key, values]) => {\r\n                     if (key === \"business_detail\") {\r\n                         let newArr=values.map(function ( value ) {\r\n                             if ( value.id === action.payload.person_detail.id ) {\r\n                                 return action.payload.person_detail\r\n                             }\r\n                             return value\r\n                         });\r\n                         return ([ key, newArr ])\r\n                     }\r\n                 return ([key, values])\r\n                 }))\r\n            }\r\n            return {\r\n                ...state,\r\n                person_show_modal: {\r\n                display: false,\r\n                title_for: \"\",\r\n                person_detail: {},\r\n                isNew: false,\r\n                isEdit: false\r\n                },\r\n                person_show_modal_business: {\r\n                    display: (!state.person_show_modal_business.isNew && state.person_show_modal_business.title_for !==\"\") ? true : false,\r\n                    title_for: (!state.person_show_modal_business.isNew && state.person_show_modal_business.title_for !==\"\") ? state.person_show_modal_business.title_for : \"\" ,\r\n                    person_detail: (!state.person_show_modal_business.isNew && state.person_show_modal_business.title_for !==\"\") ? state.person_show_modal_business.person_detail : {},\r\n                    isNew: false,\r\n                    isEdit: false\r\n                }\r\n            };\r\n             case OPEN_EDIT_PERSON_BUSINESS_DETAIL:\r\n            return {\r\n                ...state,\r\n                person_show_modal_business: {\r\n                    display: true,\r\n                    title_for: action.payload.source,\r\n                    person_detail: action.payload.person_detail,\r\n                    isNew: false,\r\n                    isEdit: true\r\n                }\r\n            };\r\n\r\n            case CLOSE_EDIT_PERSON_BUSINESS_DETAIL:\r\n                return {\r\n                    ...state, person_show_modal_business: {\r\n                        display: false,\r\n                        title_for: \"\",\r\n                        person_detail: {},\r\n                        isNew: false,\r\n                        isEdit: false\r\n                    }\r\n            };\r\n            case OPEN_ADD_PERSON_BUSINESS_DETAIL:\r\n              return {\r\n                 ...state,\r\n                person_show_modal_business: {\r\n                    display: true,\r\n                    title_for: action.payload.source,\r\n                    person_detail: action.payload.person_detail,\r\n                    isNew: true,\r\n                    isEdit: false\r\n                }\r\n            };\r\n        case UPDATE_BUSINESS_MODAL_AFTER_DELETE_DETAIL:\r\n            let newObj=Object.fromEntries(Object.entries(state.person_show_modal_business.person_detail).map(([key, values]) => {\r\n                     if (key === \"business_detail\") {\r\n                         let newArr=values.filter(function ( value ) {\r\n                                return ( value.id !== action.payload.id )\r\n                         });\r\n                         return ([ key, newArr ])\r\n                     }\r\n                 return ([key, values])\r\n                 }));\r\n            console.log(newObj)\r\n            return {\r\n                 ...state,\r\n                person_show_modal_business: {\r\n                    display: state.person_show_modal_business.display,\r\n                    title_for: state.person_show_modal_business.title_for,\r\n                    person_detail: newObj,\r\n                    isNew: state.person_show_modal_business.isNew,\r\n                    isEdit: state.person_show_modal_business.isEdit\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport persons from './persons'\r\nimport person_details from './person_details';\r\nimport person_detail_edit from './person_detail_edit';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    persons,\r\n    person_details,\r\n    person_detail_edit,\r\n});\r\nexport default createRootReducer\r\n\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from './redusers';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history'\r\n\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n\r\nconst middleware =[thunk];\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const store = createStore(\r\n    createRootReducer(history), // root reducer with router state\r\n    preloadedState,\r\n      composeWithDevTools(\r\n      applyMiddleware(\r\n        routerMiddleware(history),\r\n          ...middleware,\r\n      ),\r\n    ),\r\n  );\r\n\r\n  return store\r\n}\r\n\r\n\r\n\r\n/*\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;*/\r\n","import React, {Component} from 'react';\nimport { Route } from 'react-router-dom'\nimport Header from \"./components/layout/Header\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PersonsList from \"./components/pages/persons/redux_person_list/PersonsList\";\nimport PersonBase from \"./components/pages/persons/redux_person_view/PersonBase\";\nimport { Provider } from 'react-redux';\nimport Footer from \"./components/layout/footer\";\nimport PersonAddUpdate from \"./components/pages/persons/redux_person_add/PersonAddUpdeteForm\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore, { history } from './store'\n\n\nconst initialState = {};\nconst store = configureStore(\n    initialState);\n\n\n\n/*const App = ({ children }) => (\n  <Container style={{ margin: 20 }}>\n    <Provider store={store}>\n          <ConnectedRouter history={history}>\n              <div className=\"App\">\n                  <div className=\"container\">\n                      <Header/>\n                      <Route  path=\"/person_list/\"  exact  component={PersonsList}  />\n                      <Route  path=\"/person/:id\" exact component={PersonBase}  />\n                      <Route  path=\"/person_add/\" exact component={PersonAddUpdate}  />\n                      <Route  path=\"/person_update/:id\" exact component={PersonAddUpdate}  />\n                      <Footer/>\n                  </div>\n              </div>\n        </ConnectedRouter>\n     </Provider>\n\n  </Container>\n);\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);*/\n\nclass App extends Component{\n\n render(){\n\n    return (\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n              <div className=\"App\">\n                  <div className=\"container\">\n                      <Header/>\n                      <Route  path=\"/person_list/\"  exact  component={PersonsList}  />\n                      <Route  path=\"/person/:id\" exact component={PersonBase}  />\n                      <Route  path=\"/person_add/\" exact component={PersonAddUpdate}  />\n                      <Route  path=\"/person_update/:id\" exact component={PersonAddUpdate}  />\n                      <Footer/>\n                  </div>\n              </div>\n        </ConnectedRouter>\n     </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}